rules = [
  DisableSyntax,
  NoAutoTupling,
  NoValInForComprehension,
  RedundantSyntax,
  OrganizeImports,
  LeakingImplicitClassVal,
  EmptyCollectionsUnified,
  UnnecessarySemicolon,
  UnifiedArrow,
  ZeroIndexToHead,
  CheckIsEmpty,
  NonCaseException,
  SingleConditionMatch
]

ExplicitResultTypes {
  memberVisibility = [
    Public,
    Protected,
    Private
  ],
  fatalWarnings = true
}

DisableSyntax {
    noVars = true
    noThrows = true
    noNulls = true
    noReturns = true
    noWhileLoops = true
    noAsInstanceOf = true
    noIsInstanceOf = true
    noXml = true
    noDefaultArgs = true
    noFinalVal = true
    noFinalize = true
    noValPatterns = true
    noUniversalEquality = true
    regex = [
      {
        id = magicNumbers
        regex = {
          pattern = "(?:(?:[,({]\\s*)|(?:^\\s*))+(0*(?:(?:[2-9]\\d*\\.\\d+|1\\d+\\.\\d+|(?:0|1)\\.0*[1-9]\\d*)f?|(?:[2-9]\\d*|1\\d+)L?))"
          captureGroup = 1
        }
        message = "Numbers ({$1} in this instance) should always have a named parameter attached, or be assigned to a val."
      },
      {
        id = magicBooleans
        regex = {
          pattern = "(?:(?:[,({]\\s*)|(?:^\\s*))+(true|false)"
          captureGroup = 1
        }
        message = "Booleans ({$1} in this instance) should always have a named parameter attached, or be assigned to a val."
      }
    ]
}

OrganizeImports {
    removeUnused = false
    blankLines = Auto
    groups = [
        "re:javax?\\."
        "scala."
        "re:^(?!io\\.github\\.pervasivecats)\\."
        "io.github.pervasivecats"
    ]
    groupedImports = Explode
    importSelectorsOrder = SymbolsFirst
    importsOrder = SymbolsFirst
}
